<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="mapper.CheckoutMapper">

  <!-- 주문 저장: 컨트롤러에서 PAYMENT_READY가 와도 DB에는 PENDING으로 저장 -->
  <insert id="insertOrder" parameterType="map">
    INSERT INTO orders (user_id, status, total_amount, address, postcode)
    VALUES (
      #{userId,jdbcType=NUMERIC},
      CASE
        WHEN #{status} IN ('PAYMENT_READY','PENDING') THEN 'PENDING'
        WHEN #{status} IN ('PAID','SHIPPED','DELIVERED','CANCELLED') THEN #{status}
        ELSE 'PENDING'
      END,
      #{totalAmount},
      #{address},
      #{postcode}
    )
  </insert>

  <!-- 같은 세션에서 NEXTVAL이 실행되었다는 가정 하 CURRVAL 회수 -->
  <select id="selectCurrOrderId" resultType="long">
    SELECT seq_orders.CURRVAL FROM dual
  </select>

  <!-- 주문 항목 저장 -->
  <insert id="insertOrderItem" parameterType="map">
    INSERT INTO order_items (order_id, book_id, quantity, unit_price)
    VALUES (#{orderId}, #{bookId}, #{quantity}, #{unitPrice})
  </insert>

  <!-- 결제창용 주문 조회 (created_at 제거) -->
  <select id="findOrderForUser" resultType="map">
  SELECT
    o.order_id      AS "orderId",
    o.user_id       AS "userId",
    o.status        AS "status",
    o.total_amount  AS "totalAmount",
    o.address       AS "address",
    o.postcode      AS "postcode",
    u.name          AS "name"     -- ← users 테이블의 이름 컬럼
  FROM orders o
  JOIN users u ON u.user_id = o.user_id
  WHERE o.order_id = #{orderId}
    AND o.user_id  = #{userId}
</select>

  <select id="findOrderItemsByOrderId" resultType="map">
    SELECT
      oi.order_item_id AS "orderItemId",
      oi.order_id      AS "orderId",
      oi.book_id       AS "bookId",
      oi.quantity      AS "quantity",
      oi.unit_price    AS "unitPrice",
      b.title          AS "title"
    FROM order_items oi
    JOIN books b ON b.book_id = oi.book_id
    WHERE oi.order_id = #{orderId}
    ORDER BY oi.order_item_id
  </select>

  <select id="findOrderById" parameterType="long" resultType="map">
    SELECT
      order_id      AS "orderId",
      user_id       AS "userId",
      status        AS "status",
      total_amount  AS "totalAmount",
      address       AS "address",
      postcode      AS "postcode"
    FROM orders
    WHERE order_id = #{orderId}
  </select>

  <!-- 상태 업데이트: PENDING -> 요청한 상태 -->
  <update id="updateOrderStatus">
    UPDATE orders
       SET status = #{status}
     WHERE order_id = #{orderId}
       AND status   = 'PENDING'
  </update>

</mapper>
